/* FONTS */
    @import url('https://fonts.googleapis.com/css2?family=ADLaM+Display&family=Kanit&family=Material+Symbols+Outlined&display=swap');


/* RESETS */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }


/* PRESETS */
    html {
        font-size: 62.5%;

    }
    body {
        font-size: 1.5rem;
    }
    img {
        display: block; /* remove gap between div containers */
    }


/* CUSTOM PROPERTIES */
    :root {
        /* img dimensions - in px */
        --avo-width: 600;
        --avo-height: 720;
        --avo-top: 465;         /* top section: height*/
        --avo-mid: 120;         /* middle section: height*/
        --avo-mid-left: 105;    /* ---- sub-section: width */
        --avo-mid-mid: 325;     /* ---- sub-section: width - timer display */
        --avo-mid-right: 170;   /* ---- sub-section: width */
        --avo-mid-bottom: 135;  /* bottom section: height */

        /* img container height */
        --height-top: calc(var(--avo-top) / var(--avo-height) * 100%);
        --height-mid: calc(var(--avo-mid) / var(--avo-height) * 100%);
        --height-bottom: calc(var(--avo-bottom) / var(--avo-height) * 100%);

        /* middle img container width */
        --width-mid-left: calc(var(--avo-mid-left) / var(--avo-width) * 100%);
        --width-mid-mid: calc(var(--avo-mid-mid) / var(--avo-width) * 100%);
        --width-mid-right: calc(var(--avo-mid-right) / var(--avo-width) * 100%);

        /* spacing */
        --spc-xs: 1rem;
        --spc-sm: 2rem;
        --spc-md: 3rem;
        --spc-lg: 5rem;
        --spc-xl: 7rem;

        /* button width */
        --btn-width: 16rem;

        /* font family */
        --ff-body: sans-serif;
        --ff-heading: 'ADLaM Display', serif;
        --ff-timer: 'Kanit', sans-serif;

        /* font size */
        --fs-h1: 2rem;
        --fs-body: 1.5rem;
        --fs-counter: 8rem;

        /* colors */
        --clr-light: #E8E8E8;
        --clr-dark: #212121;
        --clr-accent: #A3511A;
        --clr-accent2: #97A588;
        --clr-ribbon-light: rgb(204, 204, 204);
        --clr-ribbon-dark: rgb(158, 172, 161);
    }

/* BODY CONTAINER */
    .body-container {
        position: relative;
        margin: var(--spc-lg);
        padding: var(--spc-lg);
    }
    .body-container::after{
        content: '';
        width: 80%;
        max-width: 700px;
        height: calc(100% - (var(--spc-lg) * 3) - var(--fs-counter));
        background: rgba(255, 255, 255, .75);
        border: 5px dashed var(--clr-light);
        border-radius: 5rem;
        position: absolute;
        top: calc(var(--fs-counter) + var(--spc-lg));
        z-index: -2;
        left: 50%;
        transform: translateX(-50%);
    }

/* HEADER CONTAINER */
    header {
        margin-top: var(--spc-md);
        font-family: var(--ff-heading);
        font-size: var(--fs-h1);
        color: var(--clr-light);
        text-align: center;
    }

    h1 {
        position: relative;
        display: inline-block;
        background: var(--clr-accent);
        padding: var(--spc-xs);
    }
    /* add tape edges for heading */
    h1::before,
    h1::after {
        content: '';
        position: absolute;
        top: 0;
        height: 100%;
        width: var(--spc-xs);
        background: linear-gradient(-135deg, var(--clr-accent) 8px, transparent 0) 0 8px, linear-gradient(320deg, var(--clr-accent) 5px, transparent 0);
        background-position: left bottom;
        background-repeat: repeat-y;
        background-size: var(--spc-xs) var(--spc-xs);
    }
    h1::before {
        transform: translateX(calc(-100% - var(--spc-xs)));
    }      
    h1::after {
        right: calc(0px - var(--spc-xs));
        transform: rotate(180deg) 
    } 
    
    /* stopwatch icon */
    .heading-icon {
        font-size: var(--fs-counter);
    }


/* MAIN CONTAINER */
    main {
        position: relative;
        max-width: 100vw;
        margin-top: var(--spc-xl);
        font-size: var(--fs-body);
        color: var(--clr-dark);
    }

    /* img container for top, middle, and bottom section of timer character */
    .timer-img-container {
        max-width: calc(var(--avo-width) * 1px);
        display: flex;
        flex-direction: column;
        margin: auto;
    }

    /* remove 1px gap between divs when viewport is an odd number and can't be divided equally */
    .timer-img-mid,
    .timer-img-bottom {
        margin-top: -1px;
    }

    /* top img div */
    .timer-img-top {
        height: var(--height-top);
    }
    /* middle img div */
    .timer-img-mid {
        display: flex;
    }

    /* middle img div - left section */
    .timer-img-mid-left {
        width: var(--width-mid-left);
    }
    /* middle img div - middle section / timer display */
    .timer-img-mid-mid {
        background: var(--clr-light);
        width: var(--width-mid-mid);
        font-family: var(--ff-timer);
        font-size: var(--fs-counter);
        display: flex;
        justify-content: center;
        align-items: center;
        line-height: 0; /* prevent timer-display div from breaking layout */
        min-height: 0;
        overflow: hidden;
    }
    /* middle img div - right section */
    .timer-img-mid-right {
        width: var(--width-mid-right);
    }

    /* bottom img div */
    .timer-img-bottom {
        height: var(--height-bottom);
    }

    /* timer display */
    .timer-display {
        max-height: 0;
        font-size: var(--fs-counter);
    }

    /* timer control container */
    .timer-control-container {
        
        margin-top: var(--spc-md);
        display: flex;
        justify-content: center;
        gap: var(--spc-lg);
    }

    .timer-control-container button { 
        position: relative;
        background: var(--clr-accent);
        border: none;
        cursor: pointer;
    }
    
    /* add tape edges to buttons */
    .timer-control-container button::before,
    .timer-control-container button::after {
        content: '';
        position: absolute;
        top: 0;
        height: 100%;
        width: var(--spc-xs);

        background: linear-gradient(-135deg, var(--clr-accent) 7px, transparent 0) 0 7px, linear-gradient(320deg, var(--clr-accent) 5px, transparent 0);
        background-position: left bottom;
        background-repeat: repeat-y;
        background-size: var(--spc-xs) var(--spc-xs);
    }
    .timer-control-container button::before {
        transform: translateX(calc(0% - var(--spc-xs)));
    }      
    .timer-control-container button::after {
        transform: scaleX(-1);
    }

    /* button font size and color */
    .timer-control-container span {
        font-size: var(--fs-counter);
        color: var(--clr-light);
    }

    /* hover effect for buttons */
    .timer-control-container span:hover {
        color: var(--clr-accent2);
        transition: .3s ease;
    }